# p4testgen seed: 101010
# Date generated: 2023-09-10-11:06:51.782
# Current statement coverage: 1
# Traces
# [Parser] MyParser
# [State] start
# [ExtractSuccess] headers.ethernet@0 | Condition: |*packetLen_bits(bit<32>)| >= 112; | Extract Size: 112 -> headers.ethernet.dstAddr = 0x8214_67B9_CCFA | headers.ethernet.srcAddr = 0xFDFD_5342_4B6C | headers.ethernet.etherType = 0x86DD
# [State] parseIpv6
# [ExtractSuccess] headers.ipv6@112 | Condition: |*packetLen_bits(bit<32>)| >= 304; | Extract Size: 192 -> headers.ipv6.version = 0x0 | headers.ipv6.dscp = 0x00 | headers.ipv6.ecn = 0x0 | headers.ipv6.flowLabel = 0x0000_0000 | headers.ipv6.payloadLength = 0x0000 | headers.ipv6.nextHeader = 0x04 | headers.ipv6.hopLimit = 0x47 | headers.ipv6.srcAddr = 0x3DED_5F0F_6FFF_8FEF | headers.ipv6.dstAddr = 0xF73D_FD4E_F1A1_9C70
# [State] parseInnerIpv4
# [ExtractSuccess] headers.innerIpv4@304 | Condition: |*packetLen_bits(bit<32>)| >= 464; | Extract Size: 160 -> headers.innerIpv4.version = 0x0 | headers.innerIpv4.ihl = 0x0 | headers.innerIpv4.diffserv = 0x00 | headers.innerIpv4.totalLen = 0x0000 | headers.innerIpv4.identification = 0x0000 | headers.innerIpv4.flags = 0x0 | headers.innerIpv4.fragOffset = 0x0000 | headers.innerIpv4.ttl = 0x00 | headers.innerIpv4.protocol = 0x04 | headers.innerIpv4.hdrChecksum = 0x0000 | headers.innerIpv4.srcAddr = 0x0000_0000 | headers.innerIpv4.dstAddr = 0x0000_0000
# [State] accept
# [Control MyVerifyChecksum start]
# [Control MyIngress start]
# [mark_to_drop executed.]
# [Table Branch: MyIngress.validate.validate | Key(s): |bmv2_ingress_port(bit<9>)|, |pktvar_2(bit<16>)|, TaintedExpression(bit<12>), TaintedExpression(bit<16>), (bit<1>)0;, (bit<1>)0;, (bit<1>)1;, (bit<1>)1;| Chosen action: MyIngress.validate.setValidated]
# [If Statement]: true -> 1; -> true
# [Internal If Statement]: 0; -> 0; -> false
# [Internal If Statement]: 1; -> 1; -> true
# [Table Branch: MyIngress.route.ipv6Route | Key(s): |pktvar_11(bit<64>)|| Chosen action: MyIngress.route.setForwarding]
# [If Statement]: metadata.l3Protocol == 4 -> |pktvar_20(bit<8>)| == 4; -> true
# [Table Branch: MyIngress.route.decap | Key(s): |pktvar_11(bit<64>)|| Chosen action: NoAction]
# [Table Branch: MyIngress.acl.acl | Key(s): |bmv2_ingress_port(bit<9>)|, |MyIngress.route.ipv6Route_arg_MyIngress.route.setForwarding1(bit<9>)|, 0, |pktvar_1(bit<48>)|, |pktvar_0(bit<48>)|, |pktvar_2(bit<16>)|, TaintedExpression(bit<32>), TaintedExpression(bit<32>), TaintedExpression(bit<8>), |pktvar_10(bit<64>)|, |pktvar_11(bit<64>)|, |pktvar_9(bit<8>)|, |pktvar_20(bit<8>)|, 0, 0| Chosen action: MyIngress.acl.allow]
# [If Statement]: true -> 1; -> true
# [If Statement]: false -> 0; -> false
# [If Statement]: true -> 1; -> true
# [Internal If Statement]: 0; -> 0; -> false
# [Internal If Statement]: 1; -> 1; -> true
# [If Statement]: headers.ipv6.hopLimit == 0 -> |pktvar_9(bit<8>)| + 255 == 0; -> false
# [If Statement]: true -> 1; -> true
# [Table Branch: MyIngress.forward.tag | Key(s): |bmv2_ingress_port(bit<9>)|| Chosen action: MyIngress.forward.setTag]
# [Internal If Statement]: 0 != 0; -> 0 != 0; -> false
# [Control MyEgress start]
# [Control MyUpdateChecksum start]
# [Control MyDeparser start]
# [Emit] headers.ethernet -> headers.ethernet.dstAddr = 0x0000_0000_0000 | headers.ethernet.srcAddr = 0xFDFD_5342_4B6C | headers.ethernet.etherType = 0x8100
# [Emit] headers.vlan -> headers.vlan.pcp = 0x0 | headers.vlan.dei = 0x0 | headers.vlan.vlanId = 0x000 | headers.vlan.etherType = 0x86DD
# [Invalid emit: headers.ipv4]
# [Emit] headers.ipv6 -> headers.ipv6.version = 0x0 | headers.ipv6.dscp = 0x00 | headers.ipv6.ecn = 0x0 | headers.ipv6.flowLabel = 0x0000_0000 | headers.ipv6.payloadLength = 0x0000 | headers.ipv6.nextHeader = 0x04 | headers.ipv6.hopLimit = 0x46 | headers.ipv6.srcAddr = 0x3DED_5F0F_6FFF_8FEF | headers.ipv6.dstAddr = 0xF73D_FD4E_F1A1_9C70
# [Emit] headers.innerIpv4 -> headers.innerIpv4.version = 0x0 | headers.innerIpv4.ihl = 0x0 | headers.innerIpv4.diffserv = 0x00 | headers.innerIpv4.totalLen = 0x0000 | headers.innerIpv4.identification = 0x0000 | headers.innerIpv4.flags = 0x0 | headers.innerIpv4.fragOffset = 0x0000 | headers.innerIpv4.ttl = 0x00 | headers.innerIpv4.protocol = 0x04 | headers.innerIpv4.hdrChecksum = 0x0000 | headers.innerIpv4.srcAddr = 0x0000_0000 | headers.innerIpv4.dstAddr = 0x0000_0000
# [Invalid emit: headers.tcp]
# [Invalid emit: headers.udp]
# [Prepending the emit buffer to the program packet]
# [Internal If Statement]: 511 == |MyIngress.route.ipv6Route_arg_MyIngress.route.setForwarding1(bit<9>)|; -> 511 == |MyIngress.route.ipv6Route_arg_MyIngress.route.setForwarding1(bit<9>)|; -> true
# [Packet marked dropped]

# Table MyIngress.validate.validate
add "MyIngress.validate.validate" 1 "headers.ethernet.etherType":0x86DD "headers.innerIpv4.$valid$":0x1 "headers.ipv4.$valid$":0x0 "headers.ipv6.$valid$":0x1 "headers.vlan.$valid$":0x0 "headers.vlan.etherType":0b**************** "headers.vlan.vlanId":0b************ "standard_metadata.ingress_port":0x04A "MyIngress.validate.setValidated"()

# Table MyIngress.route.ipv6Route
add "MyIngress.route.ipv6Route" 1 "headers.ipv6.dstAddr":0b*1***1****111*011*1*1*****0*1*1*1*1**0*1*01*00**1**1***0**1100** "MyIngress.route.setForwarding"("dstAddr":0x000000000000,"egressPort":0x1FF)

# Table MyIngress.route.decap
add "MyIngress.route.decap" 1 "headers.ipv6.dstAddr":0b***1*11**0111**1*****10*01*01*1*11*10**11*1**00****111******0000 "NoAction"()

# Table MyIngress.acl.acl
add "MyIngress.acl.acl" 1 "headers.ethernet.dstAddr":0x821467B9CCFA "headers.ethernet.etherType":0x86DD "headers.ethernet.srcAddr":0xFDFD53424B6C "headers.ipv4.dstAddr":0b******************************** "headers.ipv4.srcAddr":0b******************************** "headers.ipv4.ttl":0b******** "headers.ipv6.dstAddr":0b111*01*10*1111**111111*1010*1**01*1***0110100**11**111**0111*0*0 "headers.ipv6.hopLimit":0b01*001** "headers.ipv6.srcAddr":0b***1*1*11*1011*10**11111000**1*1011011*11111111*****111**11*1111 "metadata.egressPort":0b***11***1 "metadata.l3Protocol":0b***0*1** "metadata.l4DstPort":0b**0000000***00** "metadata.l4SrcPort":0b*0**00*000**00** "metadata.vlan":0b0*00*0*0**0* "standard_metadata.ingress_port":0b0**0****0 "MyIngress.acl.allow"()

# Table MyIngress.forward.tag
add "MyIngress.forward.tag" "standard_metadata.ingress_port":0x04A "MyIngress.forward.setTag"("vlanId":0x000)


packet

