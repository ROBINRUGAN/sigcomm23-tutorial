# p4testgen seed: 99999
# Date generated: 2023-09-10-11:38:59.835
# Current statement coverage: 0.72
# Traces
# [Parser] MyParser
# [State] start
# [ExtractSuccess] headers.ethernet@0 | Condition: |*packetLen_bits(bit<32>)| >= 112; | Extract Size: 112 -> headers.ethernet.dstAddr = 0xF9AC_509B_D11D | headers.ethernet.srcAddr = 0x99BD_32BC_9BF8 | headers.ethernet.etherType = 0x0800
# [State] parseIpv4
# [ExtractSuccess] headers.ipv4@112 | Condition: |*packetLen_bits(bit<32>)| >= 272; | Extract Size: 160 -> headers.ipv4.version = 0x0 | headers.ipv4.ihl = 0x0 | headers.ipv4.diffserv = 0x00 | headers.ipv4.totalLen = 0x0000 | headers.ipv4.identification = 0x0000 | headers.ipv4.flags = 0x0 | headers.ipv4.fragOffset = 0x0000 | headers.ipv4.ttl = 0x01 | headers.ipv4.protocol = 0x11 | headers.ipv4.hdrChecksum = 0xE8A0 | headers.ipv4.srcAddr = 0x47F3_1FF7 | headers.ipv4.dstAddr = 0xBC7F_A6DE
# [State] parseUdp
# [ExtractSuccess] headers.udp@272 | Condition: |*packetLen_bits(bit<32>)| >= 336; | Extract Size: 64 -> headers.udp.srcPort = 0x97ED | headers.udp.dstPort = 0xA6AD | headers.udp.hdrLength = 0x0000 | headers.udp.checksum = 0x0000
# [State] accept
# [Control MyVerifyChecksum start]
# [Control MyIngress start]
# [mark_to_drop executed.]
# [Table Branch: MyIngress.validate.validate | Key(s): |bmv2_ingress_port(bit<9>)|, |pktvar_2(bit<16>)|, TaintedExpression(bit<12>), TaintedExpression(bit<16>), (bit<1>)0;, (bit<1>)1;, (bit<1>)0;, (bit<1>)0;| Chosen action: MyIngress.validate.setValidated]
# [If Statement]: true -> 1; -> true
# [Internal If Statement]: 1; -> 1; -> true
# [Table Branch: MyIngress.route.ipv4Route | Key(s): |pktvar_14(bit<32>)|| Chosen action: MyIngress.route.setForwarding]
# [Assume: applying condition: 0 < |MyIngress.route.ipv4Route_arg_MyIngress.route.setForwarding1(bit<9>)| && |MyIngress.route.ipv4Route_arg_MyIngress.route.setForwarding1(bit<9>)| <= 64;]
# [Internal If Statement]: 0; -> 0; -> false
# [Table Branch: MyIngress.acl.acl | Key(s): |bmv2_ingress_port(bit<9>)|, |MyIngress.route.ipv4Route_arg_MyIngress.route.setForwarding1(bit<9>)|, 0, |pktvar_1(bit<48>)|, |pktvar_0(bit<48>)|, |pktvar_2(bit<16>)|, |pktvar_13(bit<32>)|, |pktvar_14(bit<32>)|, |pktvar_10(bit<8>)|, TaintedExpression(bit<64>), TaintedExpression(bit<64>), TaintedExpression(bit<8>), |pktvar_11(bit<8>)|, |pktvar_15(bit<16>)|, |pktvar_16(bit<16>)|| Chosen action: MyIngress.acl.allow]
# [If Statement]: true -> 1; -> true
# [If Statement]: false -> 0; -> false
# [If Statement]: true -> 1; -> true
# [Internal If Statement]: 1; -> 1; -> true
# [If Statement]: headers.ipv4.ttl == 0 -> |pktvar_10(bit<8>)| + 255 == 0; -> true
# [If Statement]: false -> 0; -> false
# [Internal If Statement]: 0 != 0; -> 0 != 0; -> false
# [Control MyEgress start]
# [Control MyUpdateChecksum start]
# [Control MyDeparser start]
# [Emit] headers.ethernet -> headers.ethernet.dstAddr = 0x0000_0000_0000 | headers.ethernet.srcAddr = 0x99BD_32BC_9BF8 | headers.ethernet.etherType = 0x0800
# [Invalid emit: headers.vlan]
# [Emit] headers.ipv4 -> headers.ipv4.version = 0x0 | headers.ipv4.ihl = 0x0 | headers.ipv4.diffserv = 0x00 | headers.ipv4.totalLen = 0x0000 | headers.ipv4.identification = 0x0000 | headers.ipv4.flags = 0x0 | headers.ipv4.fragOffset = 0x0000 | headers.ipv4.ttl = 0x00 | headers.ipv4.protocol = 0x11 | headers.ipv4.hdrChecksum = 0x0000 | headers.ipv4.srcAddr = 0x47F3_1FF7 | headers.ipv4.dstAddr = 0xBC7F_A6DE
# [Invalid emit: headers.ipv6]
# [Invalid emit: headers.innerIpv4]
# [Invalid emit: headers.tcp]
# [Emit] headers.udp -> headers.udp.srcPort = 0x97ED | headers.udp.dstPort = 0xA6AD | headers.udp.hdrLength = 0x0000 | headers.udp.checksum = 0x0000
# [Prepending the emit buffer to the program packet]
# [Internal If Statement]: 511 == 511; -> 511 == 511; -> true
# [Packet marked dropped]

# Table MyIngress.validate.validate
add "MyIngress.validate.validate" 1 "headers.ethernet.etherType":0x0800 "headers.innerIpv4.$valid$":0x0 "headers.ipv4.$valid$":0x1 "headers.ipv6.$valid$":0x0 "headers.vlan.$valid$":0x0 "headers.vlan.etherType":0b**************** "headers.vlan.vlanId":0b************ "standard_metadata.ingress_port":0x1CD "MyIngress.validate.setValidated"()

# Table MyIngress.route.ipv4Route
add "MyIngress.route.ipv4Route" 1 "headers.ipv4.dstAddr":0b*0*1**0*01*****1**1*0*1*****1*1* "MyIngress.route.setForwarding"("dstAddr":0x000000000000,"egressPort":0x02C)

# Table MyIngress.acl.acl
add "MyIngress.acl.acl" 1 "headers.ethernet.dstAddr":0x2AE7C37FBC79 "headers.ethernet.etherType":0x0800 "headers.ethernet.srcAddr":0xD821FB894D05 "headers.ipv4.dstAddr":0b1**1*******1*1****1**1**1***11*0 "headers.ipv4.srcAddr":0b01****1******0*10***11***11**111 "headers.ipv4.ttl":0b00***001 "headers.ipv6.dstAddr":0b**************************************************************** "headers.ipv6.hopLimit":0b******** "headers.ipv6.srcAddr":0b**************************************************************** "metadata.egressPort":0b*00**1*0* "metadata.l3Protocol":0b**0*0**1 "metadata.l4DstPort":0b110110*111*1**11 "metadata.l4SrcPort":0b*10111011*01011* "metadata.vlan":0b*0**000****0 "standard_metadata.ingress_port":0b*11*0*1*1 "MyIngress.acl.allow"()


packet 461 2AE7C37FBC79D821FB894D0508000000000000000000011133A647F31FF7BC7FA6DEDDD6D9D700000000F15D015D258AB108347A1B29129F5B4BA7C2CA567E06171D34ED6E4E88D9247EC917D2D58B93BED5CF14948BC5AAF259FDABD6EB2A12E36ECDFE85EBEC4BFD088B055001A99BC2786A3E8F7E710F72FFF913A8D069C7A2C79411BFDDC0E50B689613C82B8FCD74F478B9F201FE6B2984B23EAC7C9B810DBD298477B6B25A5621297D25C099B4D59A178428F9DF34F0CD0CD28F2196ACA1BDCD6A4EB62CF309755E7ED5FB604E7A453545057654C7A0C65C6D77F347295ECB1353A9A6960EFCC70CD3F1DA617CFBAE5F6F3ED5A1634781C0054BD060C3A782D8EF1946EDD03B0709CC298F8605D00B6C979D74EB7D2281DA21FEA93EE27D511FE836157154C9C1AC98AEC62E89BA681E9DDEFCD6608E13088DF71EED017740F8EC3A3F870229A4C617CF951CACC13F379D1CBC0E77FBAC2BA239B14F24BCA99904FFBA0CCFCCFEEC56C9401280521271503B5F29AC7EF3C041547A7AB3BD98E4714B719D295A12531EFBBAF6F03EE42DF8FAC22AB5418F0154889263F72858CF8E1E17B87D931C6C8438543F512B7F3D30B82671424A236B9CCF7391A622366270A00F606CC310261F5221FA33D1E7FDED5DE501AF05122876C37C5C9F08019BED0E0813963CBC82654E3648287142D05CFDFC3EEFB23212BA81AEA608D771D8AF9D8F1D77E0B4AA6CBC98961DEEBD7B3523F30E9204E8B28D2C9496669B46D0B0C113347C199D12145128CE63066496725F366AA00F2769209EE38480F11D9279AADF60C076B6D775EE5F9837967CF2BDF403A597B3C72E9873A6C376341CAB854BC89E7C5D50770DF9B33AD53F25FD81C8CD350B5E0BC63C43CD0E58B9E2A31561E6B7A612C6DC53E42E77669A8BDD9E60845FD9A1EC56069E7AB1B48F6B79E789B9662E4636EBC968B5D2687C0A9C55F9B0253BF2E25582699EDB70786B91C5EB11CDE739F7E34F8701C22F0F75BA41438AAFA964F9D4E80736A4E4A1AD4C994D02781EC1A32F9621422E68E128C852FBBB07086A7AE9D6899F8116D1E36EEF511D6BE0D0A34963677BADFD33E572084C2C5D75F87981C6388B7BFE2A1592F5FEC7BA5A62BD680758A4B6FFC25585FE8978FFFAD3742F936993FAC6CB13D28BD334D37765BB0A8CF2821587491710F5DDF65A8667D9872745DD3C54F33FD1B57AF0C15F60921D6E2A4EC19F1EBBB751426B7F8E8D013FF7A93EADCE95119839786918B1479C320AB98E6FEC7890836F88CF2C0C1195A7F23BDE623117312727A8E988C8F7FAF2ADF705A3E46D74382BD30A929EC27C3D251A04FBBBAB3BA8205694B524FE51E2D9967FB5AD822D897EF454C34ABE1AC6FCB68F006314BC67F29D9C64503F298615EDD47CB2BBA421CBBFF6BEBE150106832321D4917D4C6E11C51AFD6F2AC53A955F3CA874EC82D4273C3D1C462B0D79EB1751465DDA04D9F23FFF3631BF0003941A78E5A034801DC826FB3AE74AAA5D2AB116182C17FFFBAD40B2C55AD256605BB274F461EF4805752B6D19C4276FFAD9EDF1F0079639AE63653C7B4EC97715A8938325546FA27B717FC67284FC2D93308EF0198EF4D1F40A56684309F4A92E1BB3B6DAC596A53D376C16B68A5A1287C7315FD7A1E28E054865C8EF893632D9EC3CEAE1387D89E6F571E35735C762D9AC817D23F7B8E3ADCDE9CC54EAA69EBC0ED1248A1360D0B4EB2AE677FBC79BEBBB9E155BE543FC98B8D46F06F24C423252D13C48BF62BAF78181A3F4C9D99FF448C08086AA700116BC7A6A4F798EBA8CBB5A340951CFC2119F167C6DE1F8AA07B03682577BCCB6B66E5DF34DF9C04D7FDB7D9FE8D6C6EC72D45C56766C6BF007E628B718E3E191658D522470B1EDAF41641A307EDDE791C1130A1A761A993EE445189CE2A151D4310BD32F6DD18592A3C1564A20CF66BCD39914BE27D50BD2D1D5E15CB908296D6AFC2A1C3E68F3A894C58A9D6134FA70587255F06607BB5350279A889825CF2C179FD2093F3425B63C7C67B79182492559E4C75495EFDE42ABFD826AA1898D55F00613E3427E42211F29F7591B1107731C899E05B3916536B6D22B678576C39452F46172D7C40C60BB7AA4BF968167F156590493914950620AD57A5CBB2FDBBCD51026D92200E7752618BC2A62E9222CEBB83509D48E7B4C7CFAAF13AD74D15532ACF60346527512DE831882D7AAE4263D30F81BB74D556690FB75DB379BDAB7C41C6002F1217564446C6D8F7AED5B85641E2F1EBC77B67695F3CF5FC1CA0E5523291EC3DAFE88A48D090EB91866EAA0B1DB145F7F177E335A6A5E350ABB76BBE151C5CEC55693791C2BBC075EAB28683F2A8CC08C1693590AEF50A33416A361FEF2DE5F3B23F7EC79BA780282B51C38340C175A20CFF3A100F4C06425537183301388D84D06725E5D9CA70F6EE264D486ADD5274BE8B2FB5E765F7197D1321355320A41A372A65649B8D67DB50930C3561BB86BC9222CFD69FE44E3B39192601B63DAF851991CF1EFDDA66698DB1E888191D990CAA1229A443B1B1F0B3C535BE37651EBA5FDFCA98BE22A95EDC415BFAD21226F804EE86EA33D11C0989E28EA330C3636A3243C4690D0F7A2DE9A4EC2F6F8D97B6F41B23E31D3E65A7A4259C6F5A35FECF16F

